import { onResize } from './scripts/resize.js'
import * as menuMethods from './scripts/menu.js'
import { setSeason } from './scripts/favorites.js'
import * as formMethods from './scripts/form.js'
import { modalClose } from './scripts/modal.js'
import { fillProfileData } from './scripts/profileData.js'

window.matchMedia('screen and (max-width: 1024px)').addEventListener('change', () => setTimeout(onResize, 1), false)
window.matchMedia('screen and (max-width: 1400px)').addEventListener('change', () => setTimeout(onResize, 1), false)

document.addEventListener('readystatechange', event => {
  switch (document.readyState) {
    case 'interactive':
      // console.log('Ready state: ', document.readyState)  // DOMContentLoaded
      break
    case 'complete':
      // console.log('Ready state: ', document.readyState)  // fully loaded
      onResize()
      fillProfileData()
      setSeason()
      break
  }
})

// Making module methods available for callback events
Object.assign(Element.prototype, {
  ...menuMethods,
  setSeason,
  modalClose,
  ...formMethods,
})

// prettier-ignore
const selfCheck=[
[`Этап 1: Пользователь не зарегистрирован`],
[`Карусель реагирует на нажатие кнопок и происходит анимация перелистывания.`, 15],
[`На экране шириной 1440px проверяем, чтобы было доступно 2 других скрытых картинки. При каждом нажатии выезжает следующая, и так до границ справа и слева.`, 2],
[`Выделенная кнопка под каруселью - неактивная.`, 2],
[`Если анимация карусели не успела завершиться, при этом нажата была следующая кнопка, то картинка не должна зависнуть в промежуточном состоянии.`, 2],
[`На экране шириной 768px проверяем, чтобы было доступно 4 других скрытых картинки.`, 2],
[`Неактивными становятся не только выделенные кнопки, но и стрелочки на границах карусели.`, 2],
[`Слайдер в блоке Favorites`],
[`"Слайдер" реагирует на нажатие кнопок панели навигации и происходит анимация затухания и проявления.`, 15],
[`На любой ширине экрана все 4 карточки с книгами одновременно будут плавно затухать, а затем плавно проявляться следующие.`, 2],
[`Анимация может быть прервана следующим нажатием на кнопку выбора поры года, но при этом анимация не должна застывать в промежуточном состоянии.`, 2],
[`Во время анимаций высота блока Favorites не должна меняться.`, 2],
[`Панель навигации "слайдера" сделана по технологии "sticky" для разрешений с одним рядом книг (768px и меньше)`, 2],
[`В блоке Favorites все кнопки должны иметь имя Buy, а не Own.`, 2],

[`Этап 2: Пользователь на этапе регистрации`],
[`Меню под иконкой.`, 2],
[`На разрешении 768px, при открытом бургер-меню, оно закрывается и открывается меню авторизации.`, 2],
[`То же верно и в обратную сторону, кнопка бургер-меню должна быть доступна при открытом меню авторизации.`, 2],
[`Нажатие на любую область или элемент вне меню приводят к закрытию меню авторизации.`, 2],
[`Дизайн модального окна соответствует макету.`, 15],
[`При нажатии на кнопку Register в открытом меню авторизации появляется модальное окно REGISTER, где есть поля First name, Last name, E-mail и Password.`, 2],
[`При нажатии кнопки Sign Up в блоке Digital Library Cards также появляется модальное окно REGISTER.`, 2],
[`Окно центрировано, а область вокруг затемнена (насколько затемнена - не имеет значения).`, 2],
[`При нажатии на крестик в углу окна, или на затемненную область вне этого окна, оно закрывается.`, 2],
[`В данном случае, ограничения по полям - все поля должны быть не пустыми.`, 2],
[`Пароль должен быть не короче 8 символов.`, 2],
[`В поле E-mail должна быть валидация типа email.`, 2],
[`Данные сохраняются в хранилище localStorage, в том числе и пароль, хотя в реальной жизни так делать нельзя.`, 2],
[`Иконка пользователя меняется на заглавные буквы имени.`, 2],
[`Отображение страницы приходит в состояние после авторизации (этап 4).`, 2],
[`Будет сгенерирован девятизначный Card Number случайным образом в формате 16-ричного числа.`, 2],
[`Блок Digital Library Cards. Если введенные имя и номер карты совпадают с данными пользователя, то отображается панель с информацией, вместо кнопки Check the card на 10 секунд.`, 2],
[`Там же после отображения информации, кнопка возвращается в прежнее состояние, а поля в форме сбрасываются.`, 2],

[`Этап 3: Пользователь на этапе входа в учетную запись после регистрации.`],
[`Дизайн модального окна соответствует макету.`, 15],
[`При нажатии на кнопку Log In появляется модальное окно LOGIN, где есть поля E-mail or readers card и Password.`, 2],
[`При нажатии кнопки Log In в блоке Digital Library Cards также появляется модальное окно LOGIN.`, 2],
[`Окно центрировано, а область вокруг затемнена (насколько затемнена - не имеет значения).`, 2],
[`При нажатии на крестик в углу окна, или на затемненную область вне этого окна, оно закрывается.`, 2],
[`Для авторизации все поля должны быть не пустыми.`, 2],
[`Пароль должен быть не короче 8 символов.`, 2],
[`Если пользователь еще не вошел в учетную запись, то при нажатии на любую кнопку Buy открывается модальное окно LOGIN.`, 2],

[`Этап 4: Пользователь после входа в учетную запись`],
[`При наведении курсором на иконку пользователя должно отображаться полное имя пользователя (атрибут title).`, 2],
[`Меню под иконкой.`, 2],
[`На разрешении 768px при открытом бургер-меню, оно закрывается и открывается меню авторизации.`, 2],
[`То же верно и в обратную сторону, кнопка бургер-меню должна быть доступна.`, 2],
[`Нажатие на любую область или элемент вне меню приводят к закрытию меню профиля.`, 2],
[`Вместо надписи Profile отображается девятизначный Card Number. Для Card Number можно использовать меньший шрифт чтобы надпись вметилась в контейнер`, 2],
[`Нажатие на кнопку My Profile открывает модальное окно MY PROFILE.`, 2],
[`Нажатие на кнопку Log Out приводит к выходу пользователю из состояния авторизации, возвращаемся к этапу #1.`, 2],
[`Дизайн модального окна соответствует макету.`, 15],
[`Счетчик для Visits отображает, сколько раз пользователь проходил процесс авторизации, включая самый первый - регистрацию.`, 2],
[`Счетчик для Books отображает, сколько у пользователя книг находятся в состоянии Own. Значение варьируется 0-16.`, 2],
[`Рядом с Card Number есть кнопка, нажатие на которую копирует код карты клиента в буфер обмена.`, 2],
[`Окно центрировано, а область вокруг затемнена (насколько затемнена - не имеет значения).`, 2],
[`При нажатии на крестик в углу окна, или на затемненную область вне этого окна, оно закрывается.`, 2],
[`При нажатии на любую кнопку Buy, еще до покупки абонемента, открывается модальное окно BUY A LIBRARY CARD.`, 2],
[`При нажатии на любую кнопку Buy, после покупки абонемента, меняет вид кнопки на неактивную Own, добавляя единицу к счетчику книг в профиле.`, 2],
[`После нажатия обновляется не только счетчик, но и название книги должно отобразится в разделе Rented Books.`, 2],
[`Модальное окно нужно сделать шириной 640px.`, 2],
[`Дизайн модального окна соответствует макету.`, 15],
[`При нажатии на крестик в углу окна, или на затемненную область вне этого окна, оно закрывается.`, 2],
[`Для того, чтобы кнопка Buy была активна, все поля должны быть не пустыми.`, 2],
[`Bank card number должен содержать 16 цифр. С пробелами каждые 4 символа или нет - значения не имеет.`, 2],
[`Expiration code содержит 2 поля с ограничением в 2 цифры.`, 2],
[`CVC должен содержать 3 цифры.`, 2],
[`При наличии авторизации вместо кнопки Check the Card будут отображаться данные пользователя.`, 2],
]

let total = 0
for (let i = 0; i < selfCheck.length; ++i) {
  console.log(`${selfCheck[i][1] ? ' - ' : '## '}${selfCheck[i][0]} ${selfCheck[i][1] ? '+' + selfCheck[i][1] : ''}`)
  total += selfCheck[i][1] || 0
}
console.warn(`Total: ${total}/200`)
